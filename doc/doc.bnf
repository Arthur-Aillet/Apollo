
<lettreMin>             = "a".."z";
<lettreMaj>             = "A" .. "Z";
<letter>                = <lettreMin> | <lettreMaj>
<digit>                 = "0" .. "9";
<specialCharCall>       = "_" | "-";
<specialChars>          = "(" | ")" | "\\" | "/" | "[" |"]" | "\"" | "'" | <specialCharCall>;
<String>                = {<lettre> | <digit> | <specialCharCall>};

<PosNumber>             = {<digit>};
<NegNumber>             = "-"<PosNumber>;
<PosFloat>              = <PosNumber> "." <PosNumber>;
<NegFloat>              = <NegNumber> "." <PosNumber>;

<Number>                = <PosNumber> | <NegNumber>;
<Float>                 = <PosFloat> | <NegFloat>;
<StringType>            = "\""[{<lettre> | <digit> | <specialChar>}]"\"";
<List>                  = "[" [<Elem> {["," <Elem>]}]"]";
<Bool>                  = "true" | "false";

<Elem>                  = <StringType> | <Number> | <Float> | ArrayType> | <List> | <Bool>;

<predicat>              = "<" | ">" | "==" | "!=" | "<=" | ">=";
<boolOperator>          = "&&" | "||";
<Not>                   = "!";
<condition>             = [<Not>] <Elem> <predicat> <Elem> | [<Not>] ["("]<condition> <boolOperator> <condition> [")"];

<type>                  = "char" | "string" | "bool" | "int" | "float";

<modifieVariable>       = <String> "=" <Elem>;
<defineVariable>        = <type> <modifieVariable>;
<defineDefaultVariable> = <type> <String>;


<instruction>           = <structure_if> | <defineVariable> | <modifieVariable>;
<instructions>          = {<instruction>};


<structure_if>          = "if (" <condition> ")" "{"<instructions>"}" ["else {" <instructions>"}" ];

<function>              = "def" <String> "(" [<defineDefaultVariable> {["," <defineDefaultVariable]}] ")" "{" <instructions> "}";

